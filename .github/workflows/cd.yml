name: CD on main (self-hosted)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: [self-hosted, Linux, X64]

    steps:
      # 0) Docker Hub 로그인
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 1) 코드 동기화 & 컨테이너 재기동
      - name: Pull & Restart containers
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          set -e
          REPO="FC-DEV3-Final-Project/zoop-backend"
          APP_DIR="/home/ubuntu/zoop-app"
          BRANCH="main"
          TOKEN="$GH_PAT"
          sudo chown -R ubuntu:ubuntu "$APP_DIR"
          rm -rf "$APP_DIR"
          git clone --depth 1 -b "$BRANCH" \
            https://${TOKEN}@github.com/${REPO}.git "$APP_DIR"

          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/zoop_server:latest  || echo "No server image yet"
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/zoop_fastapi:latest || echo "No fastapi image yet"

          docker compose -f "$APP_DIR/docker-compose.yml" down --remove-orphans || true
          docker rm -f postgres-db zoop-app 2>/dev/null || true

          docker compose -f "$APP_DIR/docker-compose.yml" \
            up -d --pull=never --force-recreate

      # 2) 애플리케이션 워밍업
      - name: Wait for app warm-up
        run: sleep 30

      # 3) 헬스체크 80  ← 이름만 바꿔도 OK
      - name: Health-check 80
        uses: jtalk/url-health-check-action@v4
        with:
          url: http://localhost/hc          # 여기만 수정
          max-attempts: 60
          retry-delay: 5s
          follow-redirect: false
          retry-all: false
