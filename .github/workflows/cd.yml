name: CD on main (self-hosted)

on:
  push:
    branches:
      - main          # dev → main 머지(또는 main 직접 푸시) 시 실행

jobs:
  deploy:
    runs-on: [self-hosted, linux]

    steps:
      # 0) Docker Hub 로그인 --------------------------------------------
      - name: Docker Hub Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 1) 코드 동기화 & 컨테이너 재기동 -------------------------------
      - name: Pull & Restart containers
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          set -e
          REPO="FC-DEV3-Final-Project/zoop-backend"
          APP_DIR="/home/ubuntu/zoop-app"
          BRANCH="main"
          TOKEN="$GH_PAT"

          # 1-1) 첫 clone (main 브랜치로 바로)
          if [ ! -d "$APP_DIR/.git" ]; then
            git clone --depth 1 -b "$BRANCH" \
              https://${TOKEN}@github.com/${REPO}.git "$APP_DIR"
          fi

          # 1-2) 업데이트
          cd "$APP_DIR"
          git remote set-url origin https://${TOKEN}@github.com/${REPO}.git
          git fetch --tags --force
          git checkout -f "$BRANCH"
          git pull --ff-only origin "$BRANCH"

          # 1-3) 최신 이미지 pull
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/zoop_server:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/zoop_fastapi:latest

          # 1-4) 기존 컨테이너 종료(볼륨 유지)
          docker compose -f docker-compose.yml down --remove-orphans || true
          docker rm -f postgres-db zoop-app 2>/dev/null || true

          # 1-5) 재기동
          docker compose -f docker-compose.yml up -d --pull=never --force-recreate

      # 2) 헬스 체크 ----------------------------------------------------
      - name: Health-check 8080
        uses: jtalk/url-health-check-action@v3
        with:
          url: http://localhost:8080/hc
          max-attempts: 30
          retry-delay: 5s
