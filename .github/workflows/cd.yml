name: cd

# 빌드가 아닌, CI 워크플로 실행 완료 후(성공 시) 트리거
on:
  workflow_run:
    workflows: ["Maven CI All Checks"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull & Tag Docker Image
        run: |
          # CI 워크플로에서 미리 빌드·푸시한 이미지가 있다면 그 태그를 사용
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/zoop_server:latest

      # --- 이하 기존 deploy 스텝 그대로 ---
      - name: Set target IP
        run: |
          STATUS=$(curl -o /dev/null -w "%{http_code}" "http://${{ secrets.ZOOP_SERVER_IP }}/env")
          if [ $STATUS = 200 ]; then
            CURRENT_UPSTREAM=$(curl -s "http://${{ secrets.ZOOP_SERVER_IP }}/env")
          else
            CURRENT_UPSTREAM=green
          fi
          echo "CURRENT_UPSTREAM=$CURRENT_UPSTREAM" >> $GITHUB_ENV
          if [ $CURRENT_UPSTREAM = blue ]; then
            echo "CURRENT_PORT=8080" >> $GITHUB_ENV
            echo "STOPPED_PORT=8081" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=green" >> $GITHUB_ENV
          else
            echo "CURRENT_PORT=8081" >> $GITHUB_ENV
            echo "STOPPED_PORT=8080" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=blue" >> $GITHUB_ENV
          fi

      - name: Docker compose
        uses: appleboy/ssh-action@v1
        with:
          username: ubuntu
          host: ${{ secrets.ZOOP_SERVER_IP }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e                            # script_stop: true 대신
            cd /home/ubuntu                   # ← compose 파일이 있는 실제 경로
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/zoop_server:latest
            sudo docker-compose -f docker-compose-${{env.TARGET_UPSTREAM}}.yml up -d

      - name: Check deploy server URL
        uses: jtalk/url-health-check-action@v3
        with:
          url: http://${{ secrets.ZOOP_SERVER_IP }}:${{ env.STOPPED_PORT }}/actuator/health
          max-attempts: 18
          retry-delay: 10s

      - name: Change nginx upstream
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.ZOOP_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            sudo docker exec -i nginxserver bash -c \
              'echo "set \$service_url ${{ env.TARGET_UPSTREAM }};" > /etc/nginx/conf.d/service-env.inc && nginx -s reload'

      - name: Stop current server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.ZOOP_SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            sudo docker stop ${{ env.CURRENT_UPSTREAM }} || true
            sudo docker rm   ${{ env.CURRENT_UPSTREAM }} || true

