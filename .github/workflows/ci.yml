name: Maven CI All Checks

on:
  push:
  pull_request:

jobs:
  build-and-test:
    # ── 셀프-호스티드 러너 태그(대소문자 그대로) ──
    runs-on: [self-hosted, Linux, X64]

    steps:
      # 1) 소스 체크아웃
      - uses: actions/checkout@v4

      # 2) JDK 17 설치
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3) Maven 캐시
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # 4) Maven Wrapper 실행권한
      - name: Grant execute permission for Maven Wrapper
        run: chmod +x ./mvnw

      # 5) 빌드 & 테스트
      - name: Build and Test
        run: ./mvnw clean verify

      # 6) 정적 분석(SpotBugs)
      - name: SpotBugs
        run: ./mvnw spotbugs:check

      # ───── Docker 이미지 빌드 & 배포 ─────
      # 7) Docker Hub 로그인
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 8.5) FastAPI 변경 여부 감지
      - name: Check if FastAPI Changed
        id: fastapi_changed
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^fastapi_service/' > /dev/null && \
          echo "changed=true" >> $GITHUB_OUTPUT || echo "changed=false" >> $GITHUB_OUTPUT

      # 9) FastAPI 이미지 빌드 & 푸시 (조건부 실행)
      - name: Build & Push FastAPI Image
        if: steps.fastapi_changed.outputs.changed == 'true'
        env:
          FASTAPI_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/zoop_fastapi
        run: |
          docker build -t $FASTAPI_IMAGE:latest ./fastapi_service
          docker push $FASTAPI_IMAGE:latest

      # 10) 서버 이미지 빌드 & 푸시 (항상 실행)
      - name: Build & Push Server Image
        env:
          IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/zoop_server
        run: |
          docker build -t $IMAGE:latest .
          docker push $IMAGE:latest
