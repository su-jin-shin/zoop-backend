services:
  db:
    image: postgres:14.11
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  app:
    image: jungyeons/zoop_server:latest
    container_name: zoop-app
    depends_on:
      db:
        condition: service_healthy       # DB OK 확인 뒤 기동
    ports:
      - "8080:8080"
    environment:
      PROFILES: prod                     # 그대로 두되…
      SPRING_PROFILES_ACTIVE: prod       # 표준 키도 병행
      ENV: prod
      SERVER_NAME: prod_server
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mydb
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypass
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_REDIRECT_URI: http://43.201.121.201/users/auth/kakao/callback
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      FRONT_BASE_URL: http://localhost:3000
      FRONT_NICKNAME_PATH: /login/set-nickname
      FRONT_HOME_PATH: /login/complete
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/hc"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s                  # JVM/Flyway 부팅 여유
  fastapi:
    image: jungyeons/zoop_fastapi:latest
    container_name: fastapi
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy       # Spring 앱 OK 뒤 기동
    environment:
      DB_URL: postgresql://myuser:mypass@db:5432/mydb
    # 외부 호출용이면 주석 해제
    # ports:
    #   - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
volumes:
  postgres-data: