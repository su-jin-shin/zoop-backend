spring:
  profiles:
    # ENTRYPOINT에서 -Dspring.profiles.active 로 덮어쓰지만,
    # 기본값을 prod 로 두어 Docker 외 환경에서도 안전
    active: ${PROFILES:prod}

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver   # 명시해 두면 IDE 경고 방지

  jpa:
    hibernate:
      ddl-auto: update            # 운영에서는 validated 또는 none 권장
    properties:
      hibernate:
        format_sql: true
        show_sql: false           # DEBUG 시 true

  flyway:
    enabled: true
    locations: classpath:db/migration

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

server:
  port: 8080
  address: 0.0.0.0
  env: ${ENV:prod}
  name: ${SERVER_NAME:unknown}     # HealthCheckController에서 사용

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    url:  /api-docs
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none

jwt:
  secret: ${JWT_SECRET_KEY}

kakao:
  client-id: ${KAKAO_CLIENT_ID}
  redirect-uri: ${KAKAO_REDIRECT_URI}
